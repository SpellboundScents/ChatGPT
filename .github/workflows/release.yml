name: Release

on:
  push:
    tags:
      - 'v1.0.0'
  workflow_dispatch: {} # allows manual runs for testing (see note below)

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'   # uses pnpm-lock.yaml for cache key

      # Robust pnpm setup (either path works; having both is fine)
      - name: Enable corepack
        run: corepack enable

      # Pin (or float) the pnpm version you want, then activate it.
      # You can use @latest, but pinning is more reproducible.
      - name: Activate pnpm via Corepack
        run: corepack prepare pnpm@9.7.1 --activate

      # Optional but useful while debugging
      - name: Verify pnpm
        run: |
          which pnpm
          pnpm --version

      - name: Prepare pnpm via corepack (activates latest stable)
        run: corepack prepare pnpm@latest --activate

      # Fallback in case corepack isn't available (harmless if it is)
      - name: Install pnpm (fallback)
        run: npm install -g pnpm

      - name: Verify pnpm
        run: |
          which pnpm || true
          pnpm --version

      - name: Install JS deps
        run: pnpm install --frozen-lockfile

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust target
        uses: swatinem/rust-cache@v2
        with:
          workspaces: |
            src-tauri -> target

      - name: Install Linux deps for Tauri
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libssl-dev \
            build-essential \
            curl wget file \
            patchelf

      - name: Build (signed) app
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        run: pnpm dlx @tauri-apps/cli tauri build
        # If @tauri-apps/cli is in devDependencies, you can use:
        # run: pnpm tauri build

      - name: Create GitHub Release and upload artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: |
            src-tauri/target/release/bundle/**/*
            src-tauri/target/release/latest.json